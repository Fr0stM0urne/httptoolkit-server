"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMacSystemProxy = void 0;
const child_process_1 = require("child_process");
const parse_scutil_1 = require("./parse-scutil");
function getMacSystemProxy() {
    return new Promise((resolve, reject) => {
        const scutilProc = child_process_1.spawn('scutil', ['--proxy'], { stdio: 'pipe' });
        scutilProc.on('error', reject);
        const stdoutData = [];
        scutilProc.stdout.on('data', (d) => stdoutData.push(d));
        scutilProc.on('exit', (code, signal) => {
            if (code !== 0)
                reject(new Error(`Scutil exited with ${code || signal}`));
            const output = Buffer.concat(stdoutData).toString('utf8');
            try {
                resolve(parse_scutil_1.parseScutilOutput(output));
            }
            catch (e) {
                reject(e);
            }
        });
    });
}
exports.getMacSystemProxy = getMacSystemProxy;
//# sourceMappingURL=index.js.map